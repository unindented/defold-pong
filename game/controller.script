-- vi:filetype=lua

local constants = require "shared.constants"
local animations = require "shared.animations"

local function transition_in()
  msg.post(".", constants.ENABLE)
  animations.go_fade_in("wall_top#sprite", 0.1)
  animations.go_fade_in("wall_bottom#sprite", 0.2)
  animations.go_bounce_in("paddle_left#sprite", 0.3)
  animations.go_bounce_in("paddle_right#sprite", 0.4)
  animations.go_bounce_in("ball#sprite", 0.5)
  msg.post("scores", constants.TRANSITION_IN)
  msg.post("ball", constants.RESET_BALL_RANDOM)
end

local function transition_out()
  animations.go_fade_out("wall_top#sprite", 0.1)
  animations.go_fade_out("wall_bottom#sprite", 0.2)
  animations.go_bounce_out("paddle_left#sprite", 0.3)
  animations.go_bounce_out("paddle_right#sprite", 0.4)
  animations.go_bounce_out("ball#sprite", 0.5)
  msg.post("scores", constants.TRANSITION_OUT, function ()
    msg.post(".", constants.DISABLE)
  end)
end

function init(self)
  msg.post(".", constants.TRANSITION_IN)

  self.score_left = 0
  self.score_right = 0
end

function on_message(self, message_id)
  if message_id == constants.PADDLE_LEFT_SCORED then
    self.score_left = self.score_left + 1
    msg.post("scores", constants.UPDATE_SCORE_LEFT, {value = self.score_left})
    msg.post("ball", constants.RESET_BALL_RIGHT)
  elseif message_id == constants.PADDLE_RIGHT_SCORED then
    self.score_right = self.score_right + 1
    msg.post("scores", constants.UPDATE_SCORE_RIGHT, {value = self.score_right})
    msg.post("ball", constants.RESET_BALL_LEFT)
  elseif message_id == constants.TRANSITION_IN then
    transition_in()
  elseif message_id == constants.TRANSITION_OUT then
    transition_out()
  end
end
